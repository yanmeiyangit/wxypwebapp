{"remainingRequest":"/Users/mia/Documents/wxypwebapp/vue/node_modules/babel-loader/lib/index.js!/Users/mia/Documents/wxypwebapp/vue/src/Api.js","dependencies":[{"path":"/Users/mia/Documents/wxypwebapp/vue/src/Api.js","mtime":1554103443647},{"path":"/Users/mia/Documents/wxypwebapp/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mia/Documents/wxypwebapp/vue/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Object$assign from \"/Users/mia/Documents/wxypwebapp/vue/node_modules/@babel/runtime-corejs2/core-js/object/assign\";\nimport _classCallCheck from \"/Users/mia/Documents/wxypwebapp/vue/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mia/Documents/wxypwebapp/vue/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\nimport axios from 'js/axios'; // 所有接口的api封装\n\nvar Api =\n/*#__PURE__*/\nfunction () {\n  function Api() {\n    _classCallCheck(this, Api);\n  }\n\n  _createClass(Api, null, [{\n    key: \"recommend\",\n\n    /**\n     * 首页(Home)所有接口\n     * recommend            首页的默认数据\n     * search               搜索 参数： value：搜索关键词\n     * keeplogin            保持登录\n     */\n    value: function recommend() {\n      return axios.get('/recommend');\n    }\n  }, {\n    key: \"search\",\n    value: function search(value) {\n      var page = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n      return axios.post('/search', {\n        value: value,\n        page: page\n      });\n    }\n  }, {\n    key: \"keeplogin\",\n    value: function keeplogin() {\n      return axios.post('/keeplogin');\n    } // ===============================================================================================================\n\n    /**\n     * 分类页面(Category)所有接口\n     * category 分类查询  参数id：默认分类的id\n     */\n\n  }, {\n    key: \"category\",\n    value: function category(id) {\n      return axios.get(\"/classification?mallSubId=\".concat(id));\n    } // ===============================================================================================================\n\n    /**\n     * 购物车(ShoppingCart)所有接口\n     * getCard      查询获取购物车数据\n     * editCart     购物车加减商品      参数 ： 数量  商品id 价格\n     * deleteShop   购物车商品删除      参数 id：需要删除的商品id\n     */\n\n  }, {\n    key: \"getCard\",\n    value: function getCard() {\n      return axios.post(\"/getCard\");\n    }\n  }, {\n    key: \"editCart\",\n    value: function editCart(count, id, mallPrice) {\n      return axios.post('/editCart', {\n        count: count,\n        id: id,\n        mallPrice: mallPrice\n      });\n    }\n  }, {\n    key: \"deleteShop\",\n    value: function deleteShop(id) {\n      return axios.post('/deleteShop', id);\n    } // ===============================================================================================================\n\n    /**\n     * 购物车支付页面(ShoppingPayMent)所有接口\n     * placeOrder 提交订单 参数：address:收货地址,tel:电话，orderId：所有商品的id，totalPrice：总价格,idDirect:用来判断是购物车结算还是直接购买,count:商品数量\n     */\n\n  }, {\n    key: \"placeOrder\",\n    value: function placeOrder(_ref) {\n      var args = _Object$assign({}, _ref);\n\n      return axios.post('/order', args);\n    } // ===============================================================================================================\n\n    /**\n     * 商品详情页面(Details)所有接口\n     * goodOne          请求单个商品详情,        参数： id:商品的id,page: 商品评论的页码\n     * collection       收藏单个商品            参数：  goods:商品的详情信息\n     * cancelCollection 取消收藏单个商品        参数：  id:商品的id\n     * isCollection     查询商品是否已收藏      参数：  id:商品的id\n     * addShop          加入购物车             参数：  id:商品的id\n     */\n\n  }, {\n    key: \"goodOne\",\n    value: function goodOne(id) {\n      var page = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n      return axios.get(\"/goods/one?id=\".concat(id, \"&page=\").concat(page));\n    }\n  }, {\n    key: \"collection\",\n    value: function collection(goods) {\n      return axios.post('/collection', goods);\n    }\n  }, {\n    key: \"cancelCollection\",\n    value: function cancelCollection(id) {\n      return axios.post('/cancelCollection', {\n        id: id\n      });\n    }\n  }, {\n    key: \"isCollection\",\n    value: function isCollection(id) {\n      return axios.post(\"/isCollection\", {\n        id: id\n      });\n    }\n  }, {\n    key: \"addShop\",\n    value: function addShop(id) {\n      return axios.post(\"/addShop\", {\n        id: id\n      });\n    } // ===============================================================================================================\n\n    /**\n     * 会员中心(My)所有接口\n     * loginOut 退出登录\n     * user     获取用户信息\n     * saveUser 修改保存用户信息\n     * getOrderNum 查询用户订单数量\n     * comment  商品评论\n     */\n\n  }, {\n    key: \"loginOut\",\n    value: function loginOut() {\n      return axios.post(\"/loginOut\");\n    }\n  }, {\n    key: \"user\",\n    value: function user() {\n      return axios.post(\"/queryUser\");\n    }\n  }, {\n    key: \"saveUser\",\n    value: function saveUser(_ref2) {\n      var args = _Object$assign({}, _ref2);\n\n      return axios.post(\"/saveUser\", args);\n    }\n  }, {\n    key: \"getOrderNum\",\n    value: function getOrderNum() {\n      return axios.get(\"/myOrder/orderNum\");\n    }\n  }, {\n    key: \"comment\",\n    value: function comment(_ref3) {\n      var args = _Object$assign({}, _ref3);\n\n      return axios.post(\"/goodsOne/comment\", args);\n    } // ===============================================================================================================\n\n    /**\n     * 用户相关(user文件夹下)所有接口\n     * getAverify           获取登录注册默认验证码\n     * replaceVerify        更换验证码\n     * getAddress           查询用户收货地址 \n     * getDefaultAddress    查询默认收货地址\n     * setDefaultAddress    设置默认收货地址    参数：id：地址id\n     * postAddress          增加收货地址        参数：name:用户名,tel:电话，address:详情地址，isDefault：是否默认\n            *                                province：省，city：市，county：区，addressDetail：详情地址，\n            *                                areaCode：地区代码，id：修改地址时候要传id\n     * deleteAddress        删除地址            参数： id：地址id\n     * getCollection        查询我的收藏    参数：page，页码，默认第一页\n     * register             注册            参数：nickname，用户名 password：密码，verify:验证码\n     * login                登录\n     * codeMsg              短信验证码      参数： sms 4位验证码\n     * getMyOrder           订单查询        参数：evaluate：用来判断是不是查询订单，默认false\n     * alreadyEvaluated     查询已评价      参数： page：页面\n     * tobeEvaluated        查询待评价      参数： page：页面\n     * evaluateOne          查询单条评论    参数： id：商品id，_id：数据库的那条id\n     */\n\n  }, {\n    key: \"getAverify\",\n    value: function getAverify() {\n      return process.env.NODE_ENV === 'production' ? \"/v1/verify?mt=\".concat(Math.random()) : \"/api/v1/verify?mt=\".concat(Math.random());\n    }\n  }, {\n    key: \"getAddress\",\n    value: function getAddress() {\n      return axios.get(\"/getAddress\");\n    }\n  }, {\n    key: \"getDefaultAddress\",\n    value: function getDefaultAddress() {\n      return axios.get(\"/getDefaultAddress\");\n    }\n  }, {\n    key: \"setDefaultAddress\",\n    value: function setDefaultAddress(id) {\n      return axios.post(\"/setDefaultAddress\", {\n        id: id\n      });\n    }\n  }, {\n    key: \"postAddress\",\n    value: function postAddress(_ref4) {\n      var args = _Object$assign({}, _ref4);\n\n      return axios.post(\"/address\", args);\n    }\n  }, {\n    key: \"deleteAddress\",\n    value: function deleteAddress(id) {\n      return axios.post('/deleteAddress', {\n        id: id\n      });\n    }\n  }, {\n    key: \"getCollection\",\n    value: function getCollection() {\n      var page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      return axios.get(\"/collection/list\", {\n        params: {\n          page: page\n        }\n      });\n    }\n  }, {\n    key: \"register\",\n    value: function register(nickname, password, verify, sms) {\n      return axios.post('/register', {\n        nickname: nickname,\n        password: password,\n        verify: verify,\n        sms: sms\n      });\n    }\n  }, {\n    key: \"login\",\n    value: function login(nickname, password, verify) {\n      return axios.post('/login', {\n        nickname: nickname,\n        password: password,\n        verify: verify\n      });\n    }\n  }, {\n    key: \"codeMsg\",\n    value: function codeMsg(phone) {\n      return axios.post('/sendCodeMsg', {\n        phone: phone\n      });\n    }\n  }, {\n    key: \"getMyOrder\",\n    value: function getMyOrder() {\n      return axios.get(\"/myOrder\");\n    }\n  }, {\n    key: \"alreadyEvaluated\",\n    value: function alreadyEvaluated() {\n      var page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      return axios.get('/alreadyEvaluated', {\n        params: {\n          page: page\n        }\n      });\n    }\n  }, {\n    key: \"tobeEvaluated\",\n    value: function tobeEvaluated() {\n      var page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      return axios.get('/tobeEvaluated', {\n        params: {\n          page: page\n        }\n      });\n    }\n  }, {\n    key: \"evaluateOne\",\n    value: function evaluateOne(_id) {\n      return axios.post('/evaluateOne', {\n        _id: _id\n      });\n    }\n  }]);\n\n  return Api;\n}();\n\nexport { Api as default };",{"version":3,"sources":["/Users/mia/Documents/wxypwebapp/vue/src/Api.js"],"names":["axios","Api","get","value","page","post","id","count","mallPrice","args","goods","process","env","NODE_ENV","Math","random","params","nickname","password","verify","sms","phone","_id"],"mappings":"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","sourcesContent":["import axios from 'js/axios'\n// 所有接口的api封装\nexport default class Api {\n    /**\n     * 首页(Home)所有接口\n     * recommend            首页的默认数据\n     * search               搜索 参数： value：搜索关键词\n     * keeplogin            保持登录\n     */\n    static recommend() {\n        return axios.get('/recommend')\n    }\n\n    static search(value, page = 1) {\n        return axios.post('/search', {\n            value,\n            page\n        })\n    }\n\n    static keeplogin() {\n        return axios.post('/keeplogin')\n    }\n    // ===============================================================================================================\n    /**\n     * 分类页面(Category)所有接口\n     * category 分类查询  参数id：默认分类的id\n     */\n    static category(id) {\n        return axios.get(`/classification?mallSubId=${id}`)\n    }\n\n    // ===============================================================================================================\n    /**\n     * 购物车(ShoppingCart)所有接口\n     * getCard      查询获取购物车数据\n     * editCart     购物车加减商品      参数 ： 数量  商品id 价格\n     * deleteShop   购物车商品删除      参数 id：需要删除的商品id\n     */\n    static getCard() {\n        return axios.post(`/getCard`)\n    }\n\n    static editCart(count, id, mallPrice) {\n        return axios.post('/editCart', {\n            count,\n            id,\n            mallPrice\n        })\n    }\n\n    static deleteShop(id) {\n        return axios.post('/deleteShop', id)\n    }\n\n    // ===============================================================================================================\n    /**\n     * 购物车支付页面(ShoppingPayMent)所有接口\n     * placeOrder 提交订单 参数：address:收货地址,tel:电话，orderId：所有商品的id，totalPrice：总价格,idDirect:用来判断是购物车结算还是直接购买,count:商品数量\n     */\n    static placeOrder({ ...args }) {\n        return axios.post('/order', args)\n    }\n\n    // ===============================================================================================================\n    /**\n     * 商品详情页面(Details)所有接口\n     * goodOne          请求单个商品详情,        参数： id:商品的id,page: 商品评论的页码\n     * collection       收藏单个商品            参数：  goods:商品的详情信息\n     * cancelCollection 取消收藏单个商品        参数：  id:商品的id\n     * isCollection     查询商品是否已收藏      参数：  id:商品的id\n     * addShop          加入购物车             参数：  id:商品的id\n     */\n    static goodOne(id, page = 1) {\n        return axios.get(`/goods/one?id=${id}&page=${page}`)\n    }\n\n    static collection(goods) {\n        return axios.post('/collection', goods)\n    }\n\n    static cancelCollection(id) {\n        return axios.post('/cancelCollection', { id })\n    }\n\n    static isCollection(id) {\n        return axios.post(`/isCollection`, { id })\n    }\n\n    static addShop(id) {\n        return axios.post(`/addShop`, { id })\n    }\n    // ===============================================================================================================\n\n    /**\n     * 会员中心(My)所有接口\n     * loginOut 退出登录\n     * user     获取用户信息\n     * saveUser 修改保存用户信息\n     * getOrderNum 查询用户订单数量\n     * comment  商品评论\n     */\n    static loginOut() {\n        return axios.post(`/loginOut`)\n    }\n\n    static user() {\n        return axios.post(`/queryUser`)\n    }\n\n    static saveUser({ ...args }) {\n        return axios.post(`/saveUser`, args)\n    }\n\n    static getOrderNum() {\n        return axios.get(`/myOrder/orderNum`)\n    }\n\n    static comment({ ...args }) {\n        return axios.post(`/goodsOne/comment`, args)\n    }\n    // ===============================================================================================================\n    /**\n     * 用户相关(user文件夹下)所有接口\n     * getAverify           获取登录注册默认验证码\n     * replaceVerify        更换验证码\n     * getAddress           查询用户收货地址 \n     * getDefaultAddress    查询默认收货地址\n     * setDefaultAddress    设置默认收货地址    参数：id：地址id\n     * postAddress          增加收货地址        参数：name:用户名,tel:电话，address:详情地址，isDefault：是否默认\n            *                                province：省，city：市，county：区，addressDetail：详情地址，\n            *                                areaCode：地区代码，id：修改地址时候要传id\n     * deleteAddress        删除地址            参数： id：地址id\n     * getCollection        查询我的收藏    参数：page，页码，默认第一页\n     * register             注册            参数：nickname，用户名 password：密码，verify:验证码\n     * login                登录\n     * codeMsg              短信验证码      参数： sms 4位验证码\n     * getMyOrder           订单查询        参数：evaluate：用来判断是不是查询订单，默认false\n     * alreadyEvaluated     查询已评价      参数： page：页面\n     * tobeEvaluated        查询待评价      参数： page：页面\n     * evaluateOne          查询单条评论    参数： id：商品id，_id：数据库的那条id\n     */\n    static getAverify() { \n        return process.env.NODE_ENV === 'production' ? `/v1/verify?mt=${Math.random()}` : `/api/v1/verify?mt=${Math.random()}`\n    }\n\n    static getAddress() {\n        return axios.get(`/getAddress`)\n    }\n\n    static getDefaultAddress() {\n        return axios.get(`/getDefaultAddress`)\n    }\n\n    static setDefaultAddress(id) {\n        return axios.post(`/setDefaultAddress`, { id })\n    }\n\n    static postAddress({ ...args }) {\n        return axios.post(`/address`, args)\n    }\n\n    static deleteAddress(id) {\n        return axios.post('/deleteAddress', {\n            id\n        })\n    }\n\n    static getCollection(page = 1) {\n        return axios.get(`/collection/list`, {\n            params: { page }\n        })\n    }\n\n    static register(nickname, password,verify,sms) {\n        return axios.post('/register', {\n            nickname,\n            password,\n            verify,\n            sms\n        })\n    }\n\n    static login(nickname, password,verify,) {\n        return axios.post('/login', {\n            nickname,\n            password,\n            verify\n        })\n    }\n\n    static codeMsg(phone) {\n        return axios.post('/sendCodeMsg', {\n            phone\n        })\n    }\n\n    static getMyOrder() {\n        return axios.get(`/myOrder`)\n    }\n\n    static alreadyEvaluated(page = 1) {\n        return axios.get('/alreadyEvaluated', {\n            params: { page }\n        })\n    }\n\n    static tobeEvaluated(page = 1) {\n        return axios.get('/tobeEvaluated', {\n            params: { page }\n        })\n    }\n\n    static evaluateOne(_id) {\n        return axios.post('/evaluateOne', {\n            _id\n        })\n    }\n}"]}]}