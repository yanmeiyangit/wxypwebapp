{"remainingRequest":"/Users/mia/Documents/wxypwebapp/vue/node_modules/babel-loader/lib/index.js!/Users/mia/Documents/wxypwebapp/vue/src/assets/js/cache.js","dependencies":[{"path":"/Users/mia/Documents/wxypwebapp/vue/src/assets/js/cache.js","mtime":1554103443652},{"path":"/Users/mia/Documents/wxypwebapp/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mia/Documents/wxypwebapp/vue/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/web.dom.iterable\";\n// 缓存\nimport storage from 'good-storage';\nvar TAB_LIST = 'tab'; // TAB \n// const COMMODITY_ID = 'commodity-id' // 单条商品的id\n\nvar ADDRESS = 'address'; // 地址列表\n\nvar RECENTLY_BROWSE = 'browse'; // 最近浏览\n\nvar CITY = 'city'; // 默认城市\n\nvar SEARCH_HISYSTORY = 'searchHistory'; // 搜索历史\n\nvar TOKEN = 'token';\nexport var tab = {\n  getTab: function getTab() {\n    return storage.get(TAB_LIST, []);\n  },\n  setTab: function setTab(list) {\n    return storage.set(TAB_LIST, list);\n  }\n}; // 用户修改单条地址\n\nexport var address = {\n  getAddress: function getAddress() {\n    return storage.get(ADDRESS, {});\n  },\n  setAddress: function setAddress(list) {\n    return storage.set(ADDRESS, list);\n  },\n  clearAddress: function clearAddress() {\n    return storage.remove(ADDRESS);\n  }\n}; // 最近浏览\n\nexport var recentlyBrowse = {\n  getBrowse: function getBrowse() {\n    return storage.get(RECENTLY_BROWSE, []);\n  },\n  setBrowse: function setBrowse(data) {\n    var newData = this.getBrowse();\n\n    if (newData.length) {\n      newData.forEach(function (item, index) {\n        if (item.id == data.id) {\n          newData.splice(index, 1);\n        }\n      });\n    }\n\n    newData.unshift(data);\n\n    if (newData.length > 30) {\n      // 最近浏览最多30条缓存\n      newData.pop();\n    }\n\n    storage.set(RECENTLY_BROWSE, newData);\n    return newData;\n  },\n  clearBrowse: function clearBrowse() {\n    return storage.remove(RECENTLY_BROWSE);\n  },\n  // 删除一条\n  deleteOne: function deleteOne(id) {\n    var data = this.getBrowse();\n    var index = data.findIndex(function (val, ind, arr) {\n      return id == val.id;\n    });\n    data.splice(index, 1);\n    storage.set(RECENTLY_BROWSE, data);\n    return data;\n  }\n}; // 缓存城市\n\nexport var city = {\n  getCity: function getCity() {\n    return storage.get(CITY, '北京市');\n  },\n  setCity: function setCity(city) {\n    return storage.set(CITY, city);\n  }\n}; // 搜索历史\n\nexport var searchHistory = {\n  getHistory: function getHistory() {\n    return storage.get(SEARCH_HISYSTORY, []);\n  },\n  setHistory: function setHistory(data) {\n    var newData = this.getHistory();\n\n    if (newData.length) {\n      newData.forEach(function (item, index) {\n        if (item == data) {\n          newData.splice(index, 1);\n        }\n      });\n    }\n\n    newData.unshift(data);\n\n    if (newData.length > 15) {\n      // 最近浏览最多30条缓存\n      newData.pop();\n    }\n\n    storage.set(SEARCH_HISYSTORY, newData);\n    return newData;\n  },\n  clearHistory: function clearHistory() {\n    return storage.set(SEARCH_HISYSTORY, []);\n  }\n};\nexport var token = {\n  getToken: function getToken() {\n    return storage.get(TOKEN, '');\n  },\n  setToken: function setToken(token) {\n    return storage.set(TOKEN, token);\n  },\n  clearToken: function clearToken() {\n    return storage.remove(TOKEN);\n  }\n};",{"version":3,"sources":["/Users/mia/Documents/wxypwebapp/vue/src/assets/js/cache.js"],"names":["storage","TAB_LIST","ADDRESS","RECENTLY_BROWSE","CITY","SEARCH_HISYSTORY","TOKEN","tab","getTab","get","setTab","list","set","address","getAddress","setAddress","clearAddress","remove","recentlyBrowse","getBrowse","setBrowse","data","newData","length","forEach","item","index","id","splice","unshift","pop","clearBrowse","deleteOne","findIndex","val","ind","arr","city","getCity","setCity","searchHistory","getHistory","setHistory","clearHistory","token","getToken","setToken","clearToken"],"mappings":"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","sourcesContent":["// 缓存\nimport storage from 'good-storage'\nconst TAB_LIST = 'tab'      // TAB \n// const COMMODITY_ID = 'commodity-id' // 单条商品的id\nconst ADDRESS = 'address'     // 地址列表\nconst RECENTLY_BROWSE = 'browse'  // 最近浏览\nconst CITY = 'city'         // 默认城市\nconst SEARCH_HISYSTORY = 'searchHistory' // 搜索历史\nconst TOKEN = 'token'\nexport const tab = {\n    getTab() {\n        return storage.get(TAB_LIST,[])\n    },\n\n    setTab(list) {\n        return storage.set(TAB_LIST,list)\n    },\n}\n\n// 用户修改单条地址\nexport const address = {\n    getAddress() {\n        return storage.get(ADDRESS,{})\n    },\n\n    setAddress(list) {\n        return storage.set(ADDRESS,list)\n    },\n\n    clearAddress() {\n        return storage.remove(ADDRESS)\n    }\n}\n\n// 最近浏览\nexport const recentlyBrowse = {\n    getBrowse() {\n        return storage.get(RECENTLY_BROWSE,[])\n    },\n\n    setBrowse(data) {\n        let newData = this.getBrowse()\n        if (newData.length) {\n            newData.forEach((item,index) => {\n                if (item.id == data.id) {\n                    newData.splice(index,1)\n                }\n            })\n        }\n        newData.unshift(data)\n        if (newData.length > 30) {  // 最近浏览最多30条缓存\n            newData.pop()\n        }\n        storage.set(RECENTLY_BROWSE,newData)\n        return newData\n    },\n\n    clearBrowse() {\n        return storage.remove(RECENTLY_BROWSE)\n    },\n\n    // 删除一条\n    deleteOne(id) {\n        let data = this.getBrowse()\n        const index = data.findIndex((val,ind,arr) => {\n            return id == val.id\n        })\n        data.splice(index,1)\n        storage.set(RECENTLY_BROWSE,data)\n        return data\n    }\n}\n\n// 缓存城市\nexport const city = {\n    getCity() {\n        return storage.get(CITY,'北京市')\n    },\n\n    setCity(city) {\n        return storage.set(CITY,city)\n    }\n}\n\n// 搜索历史\nexport const searchHistory = {\n    getHistory() {\n        return storage.get(SEARCH_HISYSTORY,[])\n    },\n\n    setHistory(data) {\n        let newData = this.getHistory()\n        if (newData.length) {\n            newData.forEach((item,index) => {\n                if (item == data) {\n                    newData.splice(index,1)\n                }\n            })\n        }\n        newData.unshift(data)\n        if (newData.length > 15) {  // 最近浏览最多30条缓存\n            newData.pop()\n        }\n        storage.set(SEARCH_HISYSTORY,newData)\n        return newData\n    },\n\n    clearHistory() {\n        return storage.set(SEARCH_HISYSTORY,[])\n    }\n}\n\nexport const token = {\n    getToken() {\n        return storage.get(TOKEN,'')\n    },\n\n    setToken(token) {\n        return storage.set(TOKEN,token)\n    },\n    clearToken() {\n        return storage.remove(TOKEN)\n    }\n}"]}]}