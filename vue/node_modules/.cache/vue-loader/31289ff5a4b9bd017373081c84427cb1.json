{"remainingRequest":"/Users/mia/Documents/wxypwebapp/vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mia/Documents/wxypwebapp/vue/src/components/city/CityRight.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mia/Documents/wxypwebapp/vue/src/components/city/CityRight.vue","mtime":1554103443653},{"path":"/Users/mia/Documents/wxypwebapp/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mia/Documents/wxypwebapp/vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/mia/Documents/wxypwebapp/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mia/Documents/wxypwebapp/vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  props: [\"cities\"],\n  data() {\n    return {\n      touchStatus: false //标识符\n    };\n  },\n  computed: {\n    citiesList() {\n      let arr = []\n      for (const k of Object.keys(this.cities)) {\n          arr.push(k)\n      }\n      return arr\n      \n    }\n  },\n  methods: {\n    city(e) {\n      // 向外触发事件\n      this.$emit(\"change\", e.target.innerHTML);\n    },\n    hiddleTouchstat() {\n      this.touchStatus = true;\n    },\n    hiddleTouchmove(e) {\n      if (this.touchStatus) {\n        const startY = this.$refs[\"A\"][0].offsetTop; //A 距离顶部的高度\n        const touchY = e.touches[0].clientY - 83;\n        const index = Math.floor((touchY - startY) / 25); //当前手指滑动的位置\n        if (index >= 0 && this.citiesList.length) {\n          this.$emit(\"change\", this.citiesList[index]);\n        }\n      }\n    },\n    hiddleTouchend() {\n      this.touchStatus = false;\n    }\n  }\n};\n",{"version":3,"sources":["CityRight.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CityRight.vue","sourceRoot":"src/components/city","sourcesContent":["<template>\n    <ul>\n        <li v-for=\"val in citiesList\" \n            :key=\"val\" @click=\"city\" \n            @touchstart.prevent=\"hiddleTouchstat\" \n            @touchmove=\"hiddleTouchmove\"\n            @touchend=\"hiddleTouchend\"\n            :ref=\"val\"\n         >{{val}}</li>\n    </ul>\n</template>\n\n<script>\nexport default {\n  props: [\"cities\"],\n  data() {\n    return {\n      touchStatus: false //标识符\n    };\n  },\n  computed: {\n    citiesList() {\n      let arr = []\n      for (const k of Object.keys(this.cities)) {\n          arr.push(k)\n      }\n      return arr\n      \n    }\n  },\n  methods: {\n    city(e) {\n      // 向外触发事件\n      this.$emit(\"change\", e.target.innerHTML);\n    },\n    hiddleTouchstat() {\n      this.touchStatus = true;\n    },\n    hiddleTouchmove(e) {\n      if (this.touchStatus) {\n        const startY = this.$refs[\"A\"][0].offsetTop; //A 距离顶部的高度\n        const touchY = e.touches[0].clientY - 83;\n        const index = Math.floor((touchY - startY) / 25); //当前手指滑动的位置\n        if (index >= 0 && this.citiesList.length) {\n          this.$emit(\"change\", this.citiesList[index]);\n        }\n      }\n    },\n    hiddleTouchend() {\n      this.touchStatus = false;\n    }\n  }\n};\n</script>\n\n<style lang=\"stylus\" scoped>\nul {\n    position: fixed;\n    right: 0;\n    top: 83px;\n    bottom: 0;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    color: #00B4CE;\n\n    li {\n        width: 25px;\n        height: 25px;\n        line-height: 25px;\n        text-align: center;\n    }\n}\n</style>\n\n"]}]}