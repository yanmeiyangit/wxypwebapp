{"remainingRequest":"/Users/mia/Documents/wxypapp/Vue-shopping/vue/node_modules/_babel-loader@8.0.5@babel-loader/lib/index.js!/Users/mia/Documents/wxypapp/Vue-shopping/vue/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/mia/Documents/wxypapp/Vue-shopping/vue/node_modules/_vue-loader@15.7.0@vue-loader/lib/index.js??vue-loader-options!/Users/mia/Documents/wxypapp/Vue-shopping/vue/src/components/public/Scroll.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mia/Documents/wxypapp/Vue-shopping/vue/src/components/public/Scroll.vue","mtime":1554103443657},{"path":"/Users/mia/Documents/wxypapp/Vue-shopping/vue/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mia/Documents/wxypapp/Vue-shopping/vue/node_modules/_babel-loader@8.0.5@babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/mia/Documents/wxypapp/Vue-shopping/vue/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mia/Documents/wxypapp/Vue-shopping/vue/node_modules/_vue-loader@15.7.0@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\nimport BScroll from \"better-scroll\";\nexport default {\n  props: {\n    probeType: {\n      type: Number,\n      default: 1\n    },\n    data: {\n      type: null,\n      default: null\n    },\n    click: {\n      type: Boolean,\n      default: true\n    },\n    listenScroll: {\n      //监听scroll滚动\n      type: Boolean,\n      default: false\n    },\n    // 是否开启上拉加载\n    pullup: {\n      type: Boolean,\n      default: false\n    },\n    // 下拉刷新\n    pullDownRefresh: {\n      type: null,\n      default: false\n    },\n    // 移动端滚动\n    beforeScroll: {\n      type: Boolean,\n      default: false\n    },\n    timer: {\n      type: Number,\n      default: 20\n    },\n    bounce: {\n      type: Object,\n      default: function _default() {\n        return {\n          top: true\n        };\n      }\n    }\n  },\n  data: function data() {\n    return {\n      inPullDown: false\n    };\n  },\n  methods: {\n    init: function init() {\n      var _this = this;\n\n      if (!this.$refs.warpper) {\n        return;\n      }\n\n      this.scroll = new BScroll(this.$refs.warpper, {\n        probeType: this.probeType,\n        click: this.click,\n        pullDownRefresh: this.pullDownRefresh,\n        bounce: this.bounce\n      });\n\n      if (this.listenScroll) {\n        //滚动事件触发\n        var that = this; //pos 指的是滚动到的位置\n\n        this.scroll.on(\"scroll\", function (pos) {\n          that.$emit(\"scroll\", pos);\n        });\n      } // 上拉加载\n\n\n      if (this.pullup) {\n        this.scroll.on(\"scrollEnd\", function () {\n          if (_this.scroll.y <= _this.scroll.maxScrollY + 50) {\n            _this.$emit(\"scrollToEnd\");\n          }\n        });\n      } // 下拉刷新\n\n\n      if (this.pullDownRefresh) {\n        this.scroll.on(\"scroll\", function (pos) {\n          if (pos.y > 50) {\n            _this.$emit(\"scrollChange\");\n          }\n        }); //滑动结束松开事件\n\n        this.scroll.on(\"pullingDown\", function () {\n          _this.$emit(\"onPullDown\");\n        });\n      } // 移动端滚动\n\n\n      if (this.beforeScroll) {\n        this.scroll.on(\"beforeScrollStart\", function () {\n          _this.$emit(\"beforeScroll\");\n        });\n      }\n    },\n    // 开启滚动\n    enable: function enable() {\n      this.scroll && this.scroll.enable();\n    },\n    // 关闭滚动\n    disable: function disable() {\n      this.scroll && this.scroll.disable();\n    },\n    finishPullDown: function finishPullDown() {\n      this.scroll && this.scroll.finishPullDown();\n    },\n    refresh: function refresh() {\n      this.scroll && this.scroll.refresh();\n    },\n    scrollToElement: function scrollToElement() {\n      this.scroll && this.scroll.scrollToElement.apply(this.scroll, arguments);\n    },\n    scrollTo: function scrollTo() {\n      this.scroll && this.scroll.scrollTo.apply(this.scroll, arguments);\n    }\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n\n    setTimeout(function () {\n      //确保在dom初始化后才执行滚动方法\n      _this2.init();\n    }, 20);\n  },\n  watch: {\n    data: function data() {\n      var _this3 = this;\n\n      //监听传入进来的data数据的变化，重新就算高度\n      setTimeout(function () {\n        _this3.refresh();\n      }, this.timer);\n    }\n  }\n};",{"version":3,"sources":["Scroll.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <!-- 滚动组件 -->\n    <div ref=\"warpper\">\n        <slot></slot>\n    </div>\n</template>\n\n<script>\nimport BScroll from \"better-scroll\";\nexport default {\n    props: {\n        probeType: {\n            type: Number,\n            default: 1\n        },\n        data: {\n            type: null,\n            default: null\n        },\n        click: {\n            type: Boolean,\n            default: true\n        },\n        listenScroll: {\n            //监听scroll滚动\n            type: Boolean,\n            default: false\n        },\n        // 是否开启上拉加载\n        pullup: {\n            type: Boolean,\n            default: false\n        },\n        // 下拉刷新\n        pullDownRefresh: {\n            type: null,\n            default: false\n        },\n        // 移动端滚动\n        beforeScroll: {\n            type: Boolean,\n            default: false\n        },\n        timer: {\n            type: Number,\n            default: 20\n        },\n        bounce: {\n            type: Object,\n            default() {\n                return { top: true };\n            }\n        }\n    },\n    data() {\n        return {\n            inPullDown: false\n        };\n    },\n    methods: {\n        init() {\n            if (!this.$refs.warpper) {\n                return;\n            }\n            this.scroll = new BScroll(this.$refs.warpper, {\n                probeType: this.probeType,\n                click: this.click,\n                pullDownRefresh: this.pullDownRefresh,\n                bounce: this.bounce\n            });\n            if (this.listenScroll) {\n                //滚动事件触发\n                const that = this; //pos 指的是滚动到的位置\n                this.scroll.on(\"scroll\", pos => {\n                    that.$emit(\"scroll\", pos);\n                });\n            }\n\n            // 上拉加载\n            if (this.pullup) {\n                this.scroll.on(\"scrollEnd\", () => {\n                    if (this.scroll.y <= this.scroll.maxScrollY + 50) {\n                        this.$emit(\"scrollToEnd\");\n                    }\n                });\n            }\n\n            // 下拉刷新\n            if (this.pullDownRefresh) {\n                this.scroll.on(\"scroll\", pos => {\n                    if (pos.y > 50) {\n                        this.$emit(\"scrollChange\");\n                    }\n                });\n                //滑动结束松开事件\n                this.scroll.on(\"pullingDown\", () => {\n                    this.$emit(\"onPullDown\");\n                });\n            }\n            // 移动端滚动\n            if (this.beforeScroll) {\n                this.scroll.on(\"beforeScrollStart\", () => {\n                    this.$emit(\"beforeScroll\");\n                });\n            }\n        },\n        // 开启滚动\n        enable() {\n            this.scroll && this.scroll.enable();\n        },\n        // 关闭滚动\n        disable() {\n            this.scroll && this.scroll.disable();\n        },\n        finishPullDown() {\n            this.scroll && this.scroll.finishPullDown();\n        },\n        refresh() {\n            this.scroll && this.scroll.refresh();\n        },\n        scrollToElement() {\n            this.scroll &&\n                this.scroll.scrollToElement.apply(this.scroll, arguments);\n        },\n        scrollTo() {\n            this.scroll && this.scroll.scrollTo.apply(this.scroll, arguments);\n        }\n    },\n    mounted() {\n        setTimeout(() => {\n            //确保在dom初始化后才执行滚动方法\n            this.init();\n        }, 20);\n    },\n    watch: {\n        data() {\n            //监听传入进来的data数据的变化，重新就算高度\n            setTimeout(() => {\n                this.refresh();\n            }, this.timer);\n        }\n    }\n};\n</script>\n\n\n"],"sourceRoot":"src/components/public"}]}