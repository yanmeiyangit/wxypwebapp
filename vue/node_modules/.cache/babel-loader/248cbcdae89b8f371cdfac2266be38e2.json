{"remainingRequest":"/Users/mia/Documents/wxypwebapp/vue/node_modules/babel-loader/lib/index.js!/Users/mia/Documents/wxypwebapp/vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/mia/Documents/wxypwebapp/vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mia/Documents/wxypwebapp/vue/src/views/Collection.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mia/Documents/wxypwebapp/vue/src/views/Collection.vue","mtime":1554103443663},{"path":"/Users/mia/Documents/wxypwebapp/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mia/Documents/wxypwebapp/vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/mia/Documents/wxypwebapp/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mia/Documents/wxypwebapp/vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/mia/Documents/wxypwebapp/vue/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Scroll from 'public/Scroll';\nimport GoodsList from 'public/GoodsList';\nimport { page, vuexData } from 'js/mixin';\nexport default {\n  name: 'Collection',\n  mixins: [page, vuexData],\n  components: {\n    Scroll: Scroll,\n    GoodsList: GoodsList\n  },\n  data: function data() {\n    return {\n      list: [],\n      isText: false,\n      page: 1,\n      loading2: false\n    };\n  },\n  created: function created() {\n    this.getCollection();\n  },\n  beforeRouteUpdate: function beforeRouteUpdate(to, from, next) {\n    if (from.name == 'Details') {\n      this.getCollection();\n    }\n\n    next();\n  },\n  methods: {\n    getCollection: function () {\n      var _getCollection = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(flag) {\n        var _ref, data;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (this.userName) {\n                  _context.next = 3;\n                  break;\n                }\n\n                this.showFlag = false;\n                return _context.abrupt(\"return\");\n\n              case 3:\n                _context.prev = 3;\n\n                if (!this.isLocked()) {\n                  _context.next = 6;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 6:\n                // 必须等待上一次请求完成\n                this.locked(); //开始请求之前锁住\n\n                this.loading2 = true;\n                _context.next = 10;\n                return this.Api.getCollection(this.page);\n\n              case 10:\n                _ref = _context.sent;\n                data = _ref.data;\n\n                if (data.code == 200) {\n                  // this.showFlag = false\n                  this.loading2 = false;\n                  this.setTotal(data.data.count); // 总条数\n\n                  this.unLocked(); // 解锁\n\n                  if (flag) {\n                    this.setNewData(data.data.list);\n                  } else {\n                    this.dataArr = data.data.list;\n                  }\n                } else {\n                  this.isText = true;\n                }\n\n                _context.next = 20;\n                break;\n\n              case 15:\n                _context.prev = 15;\n                _context.t0 = _context[\"catch\"](3);\n                this.unLocked(); // 解锁\n\n                this.$toast('网络错误');\n                this.loading2 = false;\n\n              case 20:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[3, 15]]);\n      }));\n\n      function getCollection(_x) {\n        return _getCollection.apply(this, arguments);\n      }\n\n      return getCollection;\n    }(),\n    // 这里是取消收藏\n    close: function () {\n      var _close = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(item, index) {\n        var _ref2, data;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.dataArr.splice(index, 1);\n                _context2.prev = 1;\n                _context2.next = 4;\n                return this.Api.cancelCollection(item.cid);\n\n              case 4:\n                _ref2 = _context2.sent;\n                data = _ref2.data;\n\n                if (data.code == 200) {// this.getCollection()\n                }\n\n                _context2.next = 12;\n                break;\n\n              case 9:\n                _context2.prev = 9;\n                _context2.t0 = _context2[\"catch\"](1);\n                this.$toast('网络错误');\n\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[1, 9]]);\n      }));\n\n      function close(_x2, _x3) {\n        return _close.apply(this, arguments);\n      }\n\n      return close;\n    }(),\n    // 上拉加载\n    scrollToEnd: function scrollToEnd() {\n      if (this.dataArr.length >= 10) {\n        if (this.hasMore()) {\n          this.page++;\n          this.getCollection(true);\n        } else {\n          this.$toast('没有更多数据了~~');\n        }\n      }\n    }\n  }\n};",{"version":3,"sources":["Collection.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <!-- 我的收藏 -->\n    <div class=\"browse-warp\">\n        <van-nav-bar\n            title=\"我的收藏\"\n            left-arrow\n            @click-left=\"back\"\n        />\n        <Scroll  :pullup='true' @scrollToEnd='scrollToEnd'  :data='dataArr' class=\"scroll\">\n            <div>\n                <GoodsList  :list='dataArr' :isCollection='true'  @close='close'/>\n            </div>\n            <div v-if=\"!dataArr.length\" class=\"null\">\n                 {{userName ?'暂无收藏~~' : '请先登录噢~~'}}\n            </div>\n            <div v-show=\"loading2\" class=\"van-loading van-loading--circular van-loading--white\" style=\"color: white;\"><span class=\"van-loading__spinner van-loading__spinner--circular\"><svg viewBox=\"25 25 50 50\" class=\"van-loading__circular\"><circle cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\"></circle></svg></span></div>\n        </Scroll>\n        <router-view/>\n    </div>\n</template>\n\n<script>\nimport Scroll from 'public/Scroll'\nimport GoodsList from 'public/GoodsList'\nimport {page,vuexData} from 'js/mixin'\nexport default {\n    name: 'Collection',\n    mixins: [page,vuexData],\n    components: {\n        Scroll,\n        GoodsList,\n    },\n\n    data() {\n        return {\n            list: [],\n            isText: false,\n            page: 1,\n            loading2: false,\n        }\n    },\n\n    created() {\n        this.getCollection()\n    },\n    beforeRouteUpdate (to, from, next) {\n        if (from.name == 'Details') {\n            this.getCollection()\n        }\n        next()\n        \n    },\n    methods: {\n        async getCollection(flag) {\n            if (!this.userName) {\n                this.showFlag = false\n                return\n            }\n            try {\n                if (this.isLocked()) return // 必须等待上一次请求完成\n                this.locked()//开始请求之前锁住\n                this.loading2 = true\n                const {data} = await this.Api.getCollection(this.page)\n                if (data.code == 200) {\n                    // this.showFlag = false\n                    this.loading2 = false\n                    this.setTotal(data.data.count)  // 总条数\n                    this.unLocked() // 解锁\n                    if (flag) {\n                        this.setNewData(data.data.list)\n                    } else {\n                        this.dataArr = data.data.list\n                    }\n                } else {\n                    this.isText = true\n                }\n            } catch (error) {\n                this.unLocked() // 解锁\n                this.$toast('网络错误')\n                this.loading2 = false\n            }\n        },\n        // 这里是取消收藏\n        async close(item,index) {\n            this.dataArr.splice(index,1)\n            try {\n                const {data} = await this.Api.cancelCollection(item.cid)\n                if (data.code == 200) {\n                    // this.getCollection()\n                }\n            } catch (error) {\n                this.$toast('网络错误')\n            }\n        },\n\n        // 上拉加载\n        scrollToEnd() {\n            if (this.dataArr.length >= 10) {\n                if (this.hasMore()) {\n                    this.page++\n                    this.getCollection(true)\n                } else {\n                    this.$toast('没有更多数据了~~')\n                }\n            }\n            \n        }\n    }\n}\n</script>\n\n<style lang=\"stylus\" scoped>\n.browse-warp\n    position fixed\n    top 0\n    left 0\n    right 0\n    bottom 0\n    z-index 500\n    background #fff\n    .scroll\n        position fixed\n        top 40px\n        bottom 0px\n        left 0\n        right 0\n        overflow hidden\n        \n\n</style>\n\n"],"sourceRoot":"src/views"}]}