{"remainingRequest":"/Users/mia/Documents/wxypwebapp/vue/node_modules/babel-loader/lib/index.js!/Users/mia/Documents/wxypwebapp/vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/mia/Documents/wxypwebapp/vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mia/Documents/wxypwebapp/vue/src/components/city/CityRight.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mia/Documents/wxypwebapp/vue/src/components/city/CityRight.vue","mtime":1554103443653},{"path":"/Users/mia/Documents/wxypwebapp/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mia/Documents/wxypwebapp/vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/mia/Documents/wxypwebapp/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mia/Documents/wxypwebapp/vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Object$keys2 from \"/Users/mia/Documents/wxypwebapp/vue/node_modules/@babel/runtime-corejs2/core-js/object/keys\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  props: [\"cities\"],\n  data: function data() {\n    return {\n      touchStatus: false //标识符\n\n    };\n  },\n  computed: {\n    citiesList: function citiesList() {\n      var arr = [];\n\n      for (var _i = 0, _Object$keys = _Object$keys2(this.cities); _i < _Object$keys.length; _i++) {\n        var k = _Object$keys[_i];\n        arr.push(k);\n      }\n\n      return arr;\n    }\n  },\n  methods: {\n    city: function city(e) {\n      // 向外触发事件\n      this.$emit(\"change\", e.target.innerHTML);\n    },\n    hiddleTouchstat: function hiddleTouchstat() {\n      this.touchStatus = true;\n    },\n    hiddleTouchmove: function hiddleTouchmove(e) {\n      if (this.touchStatus) {\n        var startY = this.$refs[\"A\"][0].offsetTop; //A 距离顶部的高度\n\n        var touchY = e.touches[0].clientY - 83;\n        var index = Math.floor((touchY - startY) / 25); //当前手指滑动的位置\n\n        if (index >= 0 && this.citiesList.length) {\n          this.$emit(\"change\", this.citiesList[index]);\n        }\n      }\n    },\n    hiddleTouchend: function hiddleTouchend() {\n      this.touchStatus = false;\n    }\n  }\n};",{"version":3,"sources":["CityRight.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAaA,eAAA;AACA,EAAA,KAAA,EAAA,CAAA,QAAA,CADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,WAAA,EAAA,KADA,CACA;;AADA,KAAA;AAGA,GANA;AAOA,EAAA,QAAA,EAAA;AACA,IAAA,UADA,wBACA;AACA,UAAA,GAAA,GAAA,EAAA;;AACA,sCAAA,cAAA,KAAA,MAAA,CAAA,kCAAA;AAAA,YAAA,CAAA,mBAAA;AACA,QAAA,GAAA,CAAA,IAAA,CAAA,CAAA;AACA;;AACA,aAAA,GAAA;AAEA;AARA,GAPA;AAiBA,EAAA,OAAA,EAAA;AACA,IAAA,IADA,gBACA,CADA,EACA;AACA;AACA,WAAA,KAAA,CAAA,QAAA,EAAA,CAAA,CAAA,MAAA,CAAA,SAAA;AACA,KAJA;AAKA,IAAA,eALA,6BAKA;AACA,WAAA,WAAA,GAAA,IAAA;AACA,KAPA;AAQA,IAAA,eARA,2BAQA,CARA,EAQA;AACA,UAAA,KAAA,WAAA,EAAA;AACA,YAAA,MAAA,GAAA,KAAA,KAAA,CAAA,GAAA,EAAA,CAAA,EAAA,SAAA,CADA,CACA;;AACA,YAAA,MAAA,GAAA,CAAA,CAAA,OAAA,CAAA,CAAA,EAAA,OAAA,GAAA,EAAA;AACA,YAAA,KAAA,GAAA,IAAA,CAAA,KAAA,CAAA,CAAA,MAAA,GAAA,MAAA,IAAA,EAAA,CAAA,CAHA,CAGA;;AACA,YAAA,KAAA,IAAA,CAAA,IAAA,KAAA,UAAA,CAAA,MAAA,EAAA;AACA,eAAA,KAAA,CAAA,QAAA,EAAA,KAAA,UAAA,CAAA,KAAA,CAAA;AACA;AACA;AACA,KAjBA;AAkBA,IAAA,cAlBA,4BAkBA;AACA,WAAA,WAAA,GAAA,KAAA;AACA;AApBA;AAjBA,CAAA","sourcesContent":["<template>\n    <ul>\n        <li v-for=\"val in citiesList\" \n            :key=\"val\" @click=\"city\" \n            @touchstart.prevent=\"hiddleTouchstat\" \n            @touchmove=\"hiddleTouchmove\"\n            @touchend=\"hiddleTouchend\"\n            :ref=\"val\"\n         >{{val}}</li>\n    </ul>\n</template>\n\n<script>\nexport default {\n  props: [\"cities\"],\n  data() {\n    return {\n      touchStatus: false //标识符\n    };\n  },\n  computed: {\n    citiesList() {\n      let arr = []\n      for (const k of Object.keys(this.cities)) {\n          arr.push(k)\n      }\n      return arr\n      \n    }\n  },\n  methods: {\n    city(e) {\n      // 向外触发事件\n      this.$emit(\"change\", e.target.innerHTML);\n    },\n    hiddleTouchstat() {\n      this.touchStatus = true;\n    },\n    hiddleTouchmove(e) {\n      if (this.touchStatus) {\n        const startY = this.$refs[\"A\"][0].offsetTop; //A 距离顶部的高度\n        const touchY = e.touches[0].clientY - 83;\n        const index = Math.floor((touchY - startY) / 25); //当前手指滑动的位置\n        if (index >= 0 && this.citiesList.length) {\n          this.$emit(\"change\", this.citiesList[index]);\n        }\n      }\n    },\n    hiddleTouchend() {\n      this.touchStatus = false;\n    }\n  }\n};\n</script>\n\n<style lang=\"stylus\" scoped>\nul {\n    position: fixed;\n    right: 0;\n    top: 83px;\n    bottom: 0;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    color: #00B4CE;\n\n    li {\n        width: 25px;\n        height: 25px;\n        line-height: 25px;\n        text-align: center;\n    }\n}\n</style>\n\n"],"sourceRoot":"src/components/city"}]}